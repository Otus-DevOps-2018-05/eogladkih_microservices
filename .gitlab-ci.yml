image: ruby:2.4.2 
stages:
  - vm_prep
  - build
  - test
  - review
  - stage
  - production

variables: 
  DATABASE_URL: 'mongodb://mongo/user_posts'

before_script: 
  - cd reddit 
  - bundle install 

vm_prep:
  stage: vm_prep
  image: 
    name: alpine:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  before_script:
    - echo 'Replace global before_script'
    - apt add ansible
    - apt add terraform
    - apt add py-pip
    - pip install apache-libcloud
    - rm -rf .terraform
    - terraform --version
    - ansible --version
    - cd ./gitlab-ci/infra
    - echo $SERVICEACCOUNT | base64 -d > ./serviceaccount.json
    - export GOOGLE_APPLICATION_CREDENTIALS="./serviceaccount.json"
    - echo $TERRAFORM_VARS | base64 -d > ./terraform.tfvars
    - ssh-keygen -t rsa -f ~/.ssh/appuser -C appuser -P ""
    - ls -al
    - ./gce.py
    - terraform init
    - terraform apply -auto-approve

  script:
    - echo 'Terraform should work here'



build_job:
  stage: build
  script:
    - echo 'Building'

test_unit_job: 
  stage: test 
  services: 
    - mongo:latest 
  script: 
    - ruby simpletest.rb 

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  script:
    - echo 'Deploy'
  environment:
    name: dev
    url: http://dev.example.com

branch review: 
  stage: review 
  script: echo "Deploy to $CI_ENVIRONMENT_SLUG"
  environment: 
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.com
  only: 
    - branches 
  except: 
    - master 

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script: 
    - echo 'Deploy'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script: 
    - echo 'Deploy'
  environment:
    name: production
    url: https://example.com

